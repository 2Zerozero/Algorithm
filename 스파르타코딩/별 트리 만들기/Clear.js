// 문제 설명
// 첫째 줄에 정수 n이 주어진다. (0≤n≤100)

// 다음 예제와 같이 삼각형 모양으로 ‘*’을 출력하세요.
// (공백의 개수와 별의 개수를 정확하게 확인해주시길 바랍니다. 🙆🏻‍♂️)

//         *
//        ***
//       *****
//      *******
//     *********
//    ***********
//   *************
//  ***************
// *****************

function solution(star){
	// 코드 작성
    let temp = ''; // 트리를 담아줄 변수 생성

    for(let i = 0; i < star; i++) {
        temp += '\n'; // 줄 바꿈
        for(let j = 0; j < star - i; j++) {
            temp += ' '; // 공백 생성
        }
        for(let k = 0; k < 2 * i + 1; k++) {
            temp += '*'; // 별 찍기
        }
    }

    console.log(temp);
}
let star= 9;
solution(star)


// 별의 개수가 2개씩 늘어나기 때문에, 2의 배수가 필요한 것으로 보임
// 별의 개수가 1개부터 시작해야 하기 때문에, +1을 대입

// 2 * 0 + 1 = 1
// 2 * 1 + 1 = 3
// 2 * 2 + 1 = 5
// 2 * 3 + 1 = 7
// 2 * 4 + 1 = 9
// 2 * 5 + 1 = 11
// 2 * 6 + 1 = 13
// 2 * 7 + 1 = 15
// 2 * 8 + 1 = 17
// 2 * 9 + 1 = 19

function printTriangle(n) {
    for (let i = 1; i <= n; i++) {
        let space = ' '.repeat(n - i); // n = 8 => n - i = 7 즉, 7번의 공백
        let stars = '*'.repeat(2 * i - 1); // 2 * 1 - 1 = * 
        console.log(space + stars);
    }
}
// printTriangle(5) 라고한다면,
// space + start => 4개의 공백 +  *
// space + start => 3개의 공백 + ***

// repeat: 문자열을 주어진 횟수만큼 반복해 붙인 새로운 문자열을 반환